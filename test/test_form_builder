# frozen_string_literal: true

require 'minitest/autorun'
require_relative '../lib/hexlet_code/form_builder'

class TestFormBuilder < Minitest::Test
  def setup
    @user = User.new(name: 'John', job: 'Developer')
    @form_builder = FormBuilder.new(@user)
  end

  def test_paragraph_element
    @form_builder.p('Hello World')
    assert_includes @form_builder.form_body, [:p, { content: 'Hello World' }]
  end

  def test_link_element
    @form_builder.a('/home', 'Home')
    assert_includes @form_builder.form_body, [:a, { href: '/home', content: 'Home' }]
  end

  def test_image_element
    @form_builder.img('/path/to/image.jpg', 'Image Alt Text')
    assert_includes @form_builder.form_body, [:img, { src: '/path/to/image.jpg', alt: 'Image Alt Text' }]
  end

  def test_input_element
    @form_builder.input(:name)
    assert_includes @form_builder.form_body, [:input, { type: :text, name: 'name', value: 'John' }]
  end

  def test_textarea_element
    @form_builder.textarea(:job, rows: 5, cols: 20)
    assert_includes @form_builder.form_body, [:textarea, { name: 'job', rows: 5, cols: 20, content: 'Developer' }]
  end

  def test_submit_button
    @form_builder.submit('Save')
    assert_includes @form_builder.form_body, [:input, { type: 'submit', value: 'Save' }]
  end

  def test_label
    @form_builder.label(:name, 'Name')
    assert_includes @form_builder.form_body, [:label, { for: :name, content: 'Name' }]
  end
end
